
/*
 * This file was automatically generated by sdbus-c++-xml2cpp; DO NOT EDIT!
 */

#ifndef __sdbuscpp__cpu_server_intf_h__adaptor__H__
#define __sdbuscpp__cpu_server_intf_h__adaptor__H__

#include <sdbus-c++/sdbus-c++.h>
#include <string>
#include <tuple>

namespace org {
namespace cpu {

class getid_adaptor
{
public:
    static constexpr const char* INTERFACE_NAME = "org.cpu.getid";

protected:
    getid_adaptor(sdbus::IObject& object)
        : object_(object)
    {
        object_.registerProperty("id").onInterface(INTERFACE_NAME).withGetter([this](){ return this->id(); });
    }

    ~getid_adaptor() = default;

private:
    virtual int32_t id() = 0;

private:
    sdbus::IObject& object_;
};

}} // namespaces

#endif
